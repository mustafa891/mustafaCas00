name: Node.js CI/CD

on: [push] # tells github to run this on any push to the repository
            
jobs:
  test: # names the job
    runs-on: ubuntu-latest # sets the version of linux we want to use, should be what you have on your server

    strategy:
      fail-fast: false # tells github to not run further steps if this one fails
      matrix:
        node-version: [16.x] # sets the version of node we want to use, should be what you have on your server

    steps:
      - uses: actions/checkout@v3 # fetches your commit to test it
      - name: Use Node.js ${{ matrix.node-version }} # names our step
        uses: actions/setup-node@v3 # downloads node and npm
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm install --legacy-peer-deps # installs your dependencies
      # - run: npm run test --if-present # tests your app
        env:
          CI: true # shows terminal output!

  deploy:
    runs-on: ubuntu-latest
    needs: test # this job depends on "test" having finished
    if: github.ref == 'refs/heads/wallet-ingame' # we tell Github to only execute this step if we're on our master branch (so we don't put unfinished branches in production)
    steps:
      - name: Deploying to Digitalocean droplet
        uses: appleboy/ssh-action@master # An action made to control Linux servers
        env:
            SECRET_PASSWORD: ${{ secrets.PASSWORD }}
        with: # We set all our secrets here for the action, these won't be shown in the action logs
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          script: |
            export SECRET_PASSWORD=${{ secrets.PASSWORD }}
            export NVM_DIR=/home/${{ secrets.USERNAME }}/.nvm
            echo $SECRET_PASSWORD | sudo -S ln -nsf "$NVM_DIR/versions/node/v16.17.0/bin/npm" "/usr/local/bin/npm"
            echo $SECRET_PASSWORD | sudo -S ln -nsf "$NVM_DIR/versions/node/v16.17.0/bin/pm2" "/usr/local/bin/pm2"
            echo $SECRET_PASSWORD | sudo -S ln -nsf "$NVM_DIR/versions/node/v16.17.0/bin/node" "/usr/local/bin/node"
            cd CSGOCrazy-Frontend # we move into our app's folder
            git pull # we pull any changes from git
            npm prune # we remove any unused dependencies
            npm install --legacy-peer-deps # we install any missing dependencies
            npm run build # we build our app
            echo $SECRET_PASSWORD | sudo -S cp -R build/* 
            
